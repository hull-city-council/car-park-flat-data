name: Hull City Council Car Parks Data
on:
  push:
    paths:
      - .github/workflows/flat.yml # Only run a new workflow every time this file (flat.yaml) file changes
  workflow_dispatch: # Required even though this is currently empty
  schedule:
    - cron: '*/30 * * * *' # Runs every 30 minutes
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps: # This workflow has 3 steps
      # The first step is to check out the repository so it can read the files inside of it and do other operations
      - name: Check out repo
        uses: actions/checkout@v3
      # This step installs Deno, which is a new Javascript runtime that improves on Node. We'll use it for postprocessing later
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      # The third step is a Flat Action step. We fetch the data in the http_url and save it as downloaded_filename
      - name: Fetch data
        uses: githubocto/flat@mr/node16
        with:
          http_url: ${{ secrets.MIPERMIT_CARPARK_LIST_URL }} # List of car parks
          mask: true
          downloaded_filename: mi_permit_car_park_list.json # The http_url gets saved and renamed in our repository
      # - name: Fetch data
      #   uses: githubocto/flat@mr/node16
      #   with:
      #     http_url: ${{ secrets.MIPERMIT_URL }} # The data to fetch
      #     mask: true
      #     downloaded_filename: mi_permit_car_park_data.json # The http_url gets saved and renamed in our repository
      #     postprocess: mipermit-postprocess.js # A postprocessing javascript or typescript file written in Deno
      # - name: Fetch data
      #   uses: githubocto/flat@mr/node16
      #   with:
      #     http_url: ${{ secrets.HULLCC_CAR_PARK_DATA_URL }} # The data to fetch
      #     mask: true
      #     downloaded_filename: hullcc_car_park_data.json # The http_url gets saved and renamed in our repository
      #     postprocess: hullcc-postprocess.js # A postprocessing javascript or typescript file written in Deno
